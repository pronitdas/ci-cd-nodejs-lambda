# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
    branches: [ develop, master, test, stage ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
  
    - name: Setup Node.js environment
      uses: actions/setup-node@v1.4.2
      with:
        node-version: 12.x
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1
    - name: Run a multi-line script
      run: |
         mkdir -p dist/nodejs
         cp package.json dist/nodejs
         cd dist/nodejs
         yarn --production
         cd ..
         zip -r /tmp/lambda-layer.zip nodejs

    - name: Deploy to Aws
      run: aws lambda publish-layer-version --layer-name "geonode-layerv1" --description "NodeJS module for geo and postgres library" --license-info "MIT" --compatible-runtimes "nodejs12.x"  --zip-file "fileb:////tmp/lambda-layer.zip" --output json >> layer.json

    - name: Echo layer output
      run: cat layer.json

    - name: Update layer version on s3 
      run: aws s3 cp layer.json s3://samplenode-pro/$GITHUB_REF/  

    - name: Get env stuff
      run: |
        cd $GITHUB_WORKSPACE
        aws s3 cp s3://$GITHUB_REF/$GITHUB_REF.json .
        aws s3 cp s3://$GITHUB_REF/layer.json .

    - name: Geronimo
      run: |
        npm install serverless
        npx sls deploy >> slsoutput.txt
    
    - name: Update output version on s3 
      run: aws s3 cp slsoutput.txt s3://samplenode-pro/$GITHUB_REF/   